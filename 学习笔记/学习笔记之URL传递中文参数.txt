URL传递中文参数  
	URL传递中文参数，默认格式为ISO-8859-1，一般在接收该参数时，如果不进行编码，得到的会是乱码。
	一般不建议url传参，更不建议传递中文参数，如果非传不可，在传递中文参数时，接收参数时将参数转换，例如： 
	String result = new String(name.getBytes("ISO-8859-1"), "utf-8");
	第二种：在服务器xml代码中改配置信息：

<Connector port="8080"protocol="HTTP/1.1" maxThreads="150" connectionTimeout="20000"

redirectPort="8443"URIEncoding="客户端编码"/>

请求服务器显示页面过程

第一步：浏览器把URL经过编码送给服务器；

第二步：服务器把这些请求解码处理完毕之后将显示的内容进行编码发送给客户端浏览器；

第三步：浏览器按照指定的编码显示网页

在浏览器提交url请求时，若以get方式传递参数，浏览器会对url进行编码（这个编码方式根据客户端不同而设置不同）。完成了URL encode之后URL就成了ASCII范围内的字符了，然后就以iso-8859-1的编码方式转换为二进制随着请求头一起发送出去。

到了服务器之后，首先服务器会先用iso-8859-1进行解码，服务器获取的数据都是ASCII范围内的请求头字符，其中请求URL里面带有参数数据，如果是中卫或特殊字符就会出现乱码。

这时候我们就能发现出现乱码的根本原因就是客户端一般是通过用UTF-8或GBK等对数据进行encode的，到了服务器却用iso-8859-1方式decoder显然不行。

解决方式

这里的解决方式有两种，

一种：是通过String类的getBytes方法进行编码转换，具体java代码是：

//若服务器URIEncoding为iso-8859-1

new String(request.getParameter(“name”).getBytes(“iso-8859-1”),“客户端编码方式”)

第二种：在服务器xml代码中改配置信息：

redirectPort="8443"URIEncoding="客户端编码"/>  